def game_map(): #Функция для создания игрового поля
    field = [["-" for i in range(3)] for j in range(3)] #Создаем игровое поле 3х3
    return field #Возвращаем игровое поле

def turn_player(): #Функция получения хода игрока
    row = input('Введите номер строки от 0 до 2: ') #Просим игрока ввести номер строки для хода
    col = input('Введите номер столбца от 0 до 2 ') #Просим игрока ввести номер столбца для хода
    if row.isdigit() and col.isdigit(): #Проверяем введены ли игроком цифры,а не буквы и тд
        row = int(row) #Меняем тип переменной с STR на INT
        col = int(col) #Меняем тип переменной с STR на INT
    else:
        print('Ошибка - введено не число. Повторите ход введя корректные данные') #Сообщение об ошибке, если введены не цифры
        print()
        return turn_player() #Вызываем функцию заново, что получить снова ход игрока
    if 0 <= row <= 2 and 0 <= col <= 2: #Проверям ввел ли игрок допустимые значения для хода (цифры больше 0 и меньше 2)
        return row, col #Возвращаем значения хода игрока
    else:
        print('Ошибка - Номер строки и столбца должны быть введены в диапазоне от 0 до 2. Повторите ход введя корректные данные') #Сообщение об ошибке, если введены недопустимые значения
        print() #Перенос строки
        return turn_player() #Вызываем функцию заново, чтобы получить снова ход игрока

def view_field(game_map): #Фунцкия вывода текущего игрового поля на экран
    print("  0 1 2") #Выводим подписи столбцов
    number = 0 #Заводим переменную для вывода подписи оси строк
    for element in game_map: #Цикл для перебора переменной оси строк
        print(number, *element) #Вывод подписи для строки + значения элементов строки
        number += 1 #Увеличиваем переменную подписи оси строк
    return print() #Возвращаем перенос строки

def check_winner(game_map): #Проверяем победителя
    for i in range(3):
        if all(game_map[j][i] == 'X' for j in range(3)) or all(game_map[i][j] == 'X' for j in range(3)): #Проверяем победил ли первый игрок в столбцах (в столбце есть три элемента Х)
            return 1
        elif all(game_map[j][i] == '0' for j in range(3)) or all(game_map[i][j] == '0' for j in range(3)): #Проверяем победил ли второй игрок в столбцах (в столбце есть три элемента 0)
            return 2
    if game_map[0][0] == game_map[1][1] == game_map[2][2] == 'X' or game_map[0][2] == game_map[1][1] == game_map[2][0] == 'X': #Проверяем победил ли первый игрок в диагоналях
        return 1
    elif game_map[0][0] == game_map[1][1] == game_map[2][2] == '0' or game_map[0][2] == game_map[1][1] == game_map[2][0] == '0': #Проверяем победил ли второй игрок в диагоналях
        return 2
    elif '-' not in game_map[0] and '-' not in game_map[1] and '-' not in game_map[2]: #Проверяем остались ли поля для хода, если полей нет, то ничья
        return 3
    return False



print("Игра крестики-нолики") #Приветственное сообщение
game_map = game_map() #Создаем игровое поле
print("Игровое поле:") #Сообщение перед печатью игрового поля
view_field(game_map) #Выводим на экран игровое поле

winner = False #Заводим переменную для выявления победителя или окончания игры в случае ничьей
player = 1 #Определям какой игрок будет ходить первым
while winner != True: #Цикл, который действует, пока не определен победитель
    if player == 1:
        print('Ход игрока №1') #Выводим сообщение, если ход первого игрока
    else:
        print('Ход игрока №2') #Выводим сообщение, если ход второго игрока
    row, col = turn_player() #Получаем ход игрока (строка и столбец)
    if game_map[row][col] != '-':
        print('Это поле уже занято меткой игрока. Введите номер строки и столбца свободного поля') #Выводим ошибку, если пытаются сходить на занятое поле
        view_field(game_map)
        print()
    elif player == 1:
        game_map[row][col] = 'X' #Если ход первого игрока, то на поле полученного хода ставим Х
        player = 2 #Передаем ход второму игроку
    else:
        game_map[row][col] = '0' #Если ход второг игрока, то на полученного хода ставим 0
        player = 1 #Передаем ход первому игроку
    view_field(game_map) #Выводим на экран игровое поле, после совершения хода
    if 0 < check_winner(game_map) < 3: #Проверяем победителя
        print('Победил игрок', check_winner(game_map)) #Выводим сообщение с номером игрока, который победил
        winner = True #Меняем значение переменной, чтобы выйти из цикла While
    elif check_winner(game_map) == 3: #Проверяем случилась ли ничья
        print('Никто не победил!') #Выводим сообщение, если все поля заняты
        winner = True #Меняем значение переменной, чтобы выйти из цикла While

print('Игра окончена') #Финальное сообщение об окончании игры




